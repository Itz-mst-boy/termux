from telethon.sync import TelegramClient
from telethon.errors.rpcerrorlist import PhoneNumberBannedError
import pickle, os
from colorama import init, Fore
from time import sleep

init()

n = Fore.RESET
lg = Fore.BLUE
r = Fore.RED
w = Fore.WHITE
cy = Fore.CYAN
ye = Fore.YELLOW
gr = Fore.GREEN
colors = [lg, r, w, cy, ye, gr]

try:
    import requests
except ImportError:
    print(f'{lg}[i] …™…¥s·¥õ·¥Ä ü ü…™…¥…¢ ·¥ç·¥è·¥Ö·¥ú ü·¥á - requests...{n}')
    os.system('pip install requests')

def banner():
    import random
    # ·¥ç·¥ú·¥ã·¥ás ú  ü·¥è…¢·¥è
    b = [
    

  ' ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïî‚ïó‚îÄ‚îÄ‚ïî‚ïê‚ï¶‚ïó  ',
  ' ‚ïî‚ïê‚ïê‚ï¶‚ï¶‚ï£‚ï†‚ï¶‚ïê‚ï£‚ïê‚ï£‚ïö‚ïó ',
  ' ‚ïë‚ïë‚ïë‚ïë‚ïë‚ïë‚ïê‚ï£‚ï©‚ï¨‚ïê‚ïë‚ïë‚ïë ',
  ' ‚ïö‚ï©‚ï©‚ï©‚ïê‚ï©‚ï©‚ï©‚ïê‚ï©‚ïê‚ï©‚ï©‚ïù ',

    ]
    for char in b:
        print(f'{random.choice(colors)}{char}{n}')
    #print('=============·¥ç·¥Äs·¥õ·¥á Ä·¥ç…™…¥·¥Ö …¥·¥á·¥õ·¥°·¥è Ä·¥ã ·¥è“ì“ì…™·¥Ñ…™·¥Ä ü==============')
    print(f'   ·¥†·¥á Äs…™·¥è…¥: 2.0 | ·¥Ä·¥ú·¥õ ú·¥è Ä: ·¥ç·¥ú·¥ã·¥ás ú{n}\n')

def clr():
    if os.name == 'nt':
        os.system('cls')
    else:
        os.system('clear')

while True:
    clr()
    banner()
    print(lg+'[1] ·¥Ä·¥Ö·¥Ö …¥·¥á·¥° ·¥Ä·¥Ñ·¥Ñ·¥è·¥ú…¥·¥õs  ô ô'+n)
    print(lg+'[2] “ì…™ ü·¥õ·¥á Ä ·¥Ä ü ü  ô·¥Ä…¥…¥·¥á·¥Ö ·¥Ä·¥Ñ·¥Ñ·¥è·¥ú…¥·¥õs'+n)
    print(lg+'[3] ·¥Ö·¥á ü·¥á·¥õ·¥á s·¥ò·¥á·¥Ñ…™“ì…™·¥Ñ ·¥Ä·¥Ñ·¥Ñ·¥è·¥ú…¥·¥õs'+n)
    print(lg+'[4] ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á  è·¥è·¥ú Ä s·¥Ñ Ä…™·¥ò·¥õ ·¥Ö·¥è…¥·¥õ ·¥ús·¥á'+n)
    print(lg+'[5] ·¥áx…™·¥õ'+n)
    a = int(input('\n·¥á…¥·¥õ·¥á Ä  è·¥è·¥ú Ä ·¥Ñ ú·¥è…™·¥Ñ·¥á  ô ô'))
    if a == 1:
        new_accs = []
        with open('vars.txt', 'ab') as g:
            number_to_add = int(input(f'\n{gr} [~] ·¥á…¥·¥õ·¥á Ä  …¥·¥ú·¥ç ô·¥á Ä ·¥è“ì ·¥Ä·¥Ñ·¥Ñ·¥è·¥ú…¥·¥õs ·¥õ·¥è ·¥Ä·¥Ö·¥Ö ·¥á…¢(2 ·¥è Ä 3): {r}'))
            for i in range(number_to_add):
                phone_number = str(input(f'\n{ye} [~] ·¥á…¥·¥õ·¥á Ä ·¥ò ú·¥è…¥·¥á …¥·¥ú·¥ç ô·¥á Ä  ô ô: {r}'))
                parsed_number = ''.join(phone_number.split())
                pickle.dump([parsed_number], g)
                new_accs.append(parsed_number)
            print(f'\n{cy} [i] s·¥Ä·¥†·¥á·¥Ö ·¥Ä ü ü ·¥Ä·¥Ñ·¥Ñ·¥è·¥ú…¥·¥õs …™…¥ vars.txt')
            clr()
            print(f'\n{gr} [*]  ü·¥è…¢…¢…™…¥…¢ …™…¥ “ì Ä·¥è·¥ç …¥·¥á·¥° ·¥Ä·¥Ñ·¥Ñ·¥è·¥ú…¥·¥õs\n')
            for number in new_accs:
                c = TelegramClient(f'sessions/{number}', 11849799 , '2bdcc0f0b3a04954d1cc1b11d5a1f669')
                c.start(number)
                print(f'{ye}[+]  ü·¥è…¢…™…¥ s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ·¥ä·¥è…™…¥ @mr_sukkun')
                c.disconnect()
            input(f'\n ·¥ò Ä·¥áss ·¥á…¥·¥õ·¥á Ä ·¥õ·¥è …¢·¥è ·¥õ·¥è ·¥ç·¥Ä…™…¥ ·¥ç·¥á…¥·¥ú...')

        g.close()
    elif a == 2:
        accounts = []
        banned_accs = []
        h = open('vars.txt', 'rb')
        while True:
            try:
                accounts.append(pickle.load(h))
            except EOFError:
                break
        h.close()
        if len(accounts) == 0:
            print(r+'[!] ·¥õ ú·¥á Ä·¥á ·¥Ä Ä·¥á …¥·¥è ·¥Ä·¥Ñ·¥Ñ·¥è·¥ú…¥·¥õs  ô ô! ·¥ò ü·¥á·¥Äs·¥á ·¥Ä·¥Ö·¥Ö s·¥è·¥ç·¥á ·¥Ä…¥·¥Ö  Ä·¥á·¥õ Ä è')
            sleep(3)
        else:
            for account in accounts:
                phone = str(account[0])
                client = TelegramClient(f'sessions/{phone}', 11849799 , '2bdcc0f0b3a04954d1cc1b11d5a1f669')
                client.connect()
                if not client.is_user_authorized():
                    try:
                        client.send_code_request(phone)
                        #client.sign_in(phone, input('[+] Enter the code: '))
                        print(f'{blue}[+] {phone} …™s …¥·¥è·¥õ  ô·¥Ä…¥…¥·¥á·¥Ö{n}')
                    except PhoneNumberBannedError:
                        print(r+str(phone) + ' …™s  ô·¥Ä…¥…¥·¥á·¥Ö üòû!'+n)
                        banned_accs.append(account)
            if len(banned_accs) == 0:
                print(lg+'·¥Ñ·¥è…¥…¢ Ä·¥Ä·¥õs! …¥·¥è  ô·¥Ä…¥…¥·¥á·¥Ö ·¥Ä·¥Ñ·¥Ñ·¥è·¥ú…¥·¥õs')
                input('\n·¥ò Ä·¥áss ·¥á…¥·¥õ·¥á Ä ·¥õ·¥è …¢·¥è ·¥õ·¥è ·¥ç·¥Ä…™…¥ ·¥ç·¥á…¥·¥ú...')
            else:
                for m in banned_accs:
                    accounts.remove(m)
                with open('vars.txt', 'wb') as k:
                    for a in accounts:
                        Phone = a[0]
                        pickle.dump([Phone], k)
                k.close()
                print(lg+'[i] ·¥Ä ü ü  ô·¥Ä…¥…¥·¥á·¥Ö ·¥Ä·¥Ñ·¥Ñ·¥è·¥ú…¥·¥õs  Ä·¥á·¥ç·¥è·¥†·¥á·¥Ö'+n)
                input('\n·¥ò Ä·¥áss ·¥á…¥·¥õ·¥á Ä ·¥õ·¥è  …¢·¥è ·¥õ·¥è  ·¥ç·¥Ä…™…¥ ·¥ç·¥á…¥·¥ú...')

    elif a == 3:
        accs = []
        f = open('vars.txt', 'rb')
        while True:
            try:
                accs.append(pickle.load(f))
            except EOFError:
                break
        f.close()
        i = 0
        print(f'{ye}[i] ·¥Ñ ú·¥è·¥ès·¥á ·¥Ä…¥ ·¥Ä·¥Ñ·¥Ñ·¥è·¥ú…¥·¥õ ·¥õ·¥è ·¥Ö·¥á ü·¥á·¥õ·¥á\n')
        for acc in accs:
            print(f'{lg}[{i}] {acc[0]}{n}')
            i += 1
        index = int(input(f'\n{lg}[+] ·¥á…¥·¥õ·¥á Ä ·¥Ä ·¥Ñ ú·¥è…™·¥Ñ·¥á  ô ô: {n}'))
        phone = str(accs[index][0])
        session_file = phone + '.session'
        if os.name == 'nt':
            os.system(f'del sessions\\{session_file}')
        else:
            os.system(f'rm sessions/{session_file}')
        del accs[index]
        f = open('vars.txt', 'wb')
        for account in accs:
            pickle.dump(account, f)
        print(f'\n{lg}[+] ·¥Ä·¥Ñ·¥Ñ·¥è·¥ú…¥·¥õ ·¥Ö·¥á ü·¥á·¥õ·¥á·¥Ö{n}')
        input(f'\n·¥ò Ä·¥áss ·¥á…¥·¥õ·¥á Ä ·¥õ·¥è …¢·¥è ·¥õ·¥è ·¥ç·¥Ä…™…¥ ·¥ç·¥á…¥·¥ú...')
        f.close()
    elif a == 4:
        # ·¥õ ú·¥Ä…¥·¥ãs ·¥õ·¥è github.com/Itz-mst-boy “ì·¥è Ä ·¥õ ú·¥á s…¥…™·¥ò·¥ò·¥á·¥õ  ô·¥á ü·¥è·¥°
        print(f'\n{lg}[i] ·¥Ñ ú·¥á·¥Ñ·¥ã…™…¥…¢ “ì·¥è Ä ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás...')
        try:
            # https://raw.githubusercontent.com/Itz-mst-boy/termux/main/version.txt
            version = requests.get('https://raw.githubusercontent.com/Itz-mst-boy/termux/main/version.txt')
        except:
            print(f'{r}  è·¥è·¥ú ·¥Ä Ä·¥á …¥·¥è·¥õ ·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥õ·¥è ·¥õ ú·¥á  …™…¥·¥õ·¥á Ä…¥·¥á·¥õ')
            print(f'{r} ·¥ò ü·¥á·¥Äs·¥á ·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ ·¥õ·¥è ·¥õ ú·¥á …™…¥·¥õ·¥á Ä…¥·¥á·¥õ ·¥Ä…¥·¥Ö  Ä·¥á·¥õ Ä è')
            exit()
        if float(version.text) > 0.9:
            prompt = str(input(f'{lg}[~] ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á ·¥Ä·¥†·¥Ä…™ ü·¥Ä ô ü·¥á[Version {version.text}]. ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö?[y/n]: {r}'))
            if prompt == 'y' or prompt == 'yes' or prompt == 'Y':
                print(f'{lg}[i] ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö…™…¥…¢ ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás...')
                if os.name == 'nt':
                    os.system('del adder.py')
                    os.system('del manager.py')
                else:
                    os.system('rm adder.py')
                    os.system('rm manager.py')
                #os.system('del scraper.py')
                os.system('curl -l -O https://raw.githubusercontent.com/Itz-mst-boy/termux/main/rexadder.py')
                os.system('curl -l -O https://raw.githubusercontent.com/Itz-mst-boy/termux/main/rexmanager.py')
                print(f'{gr}[*] ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á·¥Ö ·¥õ·¥è ·¥†·¥á Äs…™·¥è…¥: {version.text}')
                input('·¥ò Ä·¥áss ·¥á…¥·¥õ·¥á Ä ·¥õ·¥è ·¥áx…™·¥õ...')
                exit()
            else:
                print(f'{lg}[!] ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á ·¥Ä ô·¥è Ä·¥õ·¥á·¥Ö.')
                input('·¥ò Ä·¥áss ·¥á…¥·¥õ·¥á Ä ·¥õ·¥è …¢·¥è·¥õ·¥è ·¥ç·¥Ä…™…¥ ·¥ç·¥á…¥·¥ú...')
        else:
            print(f'{lg}[i]  è·¥è·¥ú ·¥Ä ü Ä·¥á·¥Ä·¥Ö è  ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á·¥Ö  ·¥° ú è  ô·¥ú ü ü è…™…¥…¢ ·¥ç·¥á “ì·¥ú·¥Ñ·¥ã')
            input('·¥ò Ä·¥áss ·¥á…¥·¥õ·¥á Ä ·¥õ·¥è …¢·¥è·¥õ·¥è ·¥ç·¥Ä…™…¥ ·¥ç·¥á…¥·¥ú...')
    elif a == 5:
        clr()
        banner()
        exit()
